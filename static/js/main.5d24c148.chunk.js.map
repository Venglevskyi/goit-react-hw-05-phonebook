{"version":3,"sources":["Components/ContactForm/contactForm.module.css","Components/ContactList/contactList.module.css","Components/Filter/filter.module.css","Components/Notification/notification.module.css","Components/Toggler/toggler.module.css","Components/ContactListItem/contactList.module.css","base.module.css","css-animation-title/animationTitle.module.css","Components/ContactForm/animationFormContact.module.css","Components/Layout/layout.module.css","Components/Loader/loader.module.css","images/server-error.jpg","redux/contacts/contactsActions.js","redux/contacts/contactsReducer.js","redux/store.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","context/ThemeContext.js","hoc/withThemeContext.js","Components/Layout/Layout.js","Components/Loader/Loader.js","Components/Toggler/Toggler.js","Components/ContactForm/ContactForm.js","Components/Button/DeleteButton.js","Components/ContactListItem/ContactListItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/ServerError/ServerError.js","Components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","getContactRequest","getContactSuccess","getContactError","removeContactRequest","removeContactSuccess","removeContactError","formFilter","items","createReducer","_","action","payload","state","filter","id","loader","error","combineReducers","store","configureStore","reducer","contacts","contactsReducer","baseUrl","setHeaders","headers","Authorization","getLoadingContact","getContact","getFilterContact","getErrorServer","getVisibleContacts","createSelector","item","name","toLowerCase","includes","getContactsById","contactId","find","contact","themeConfig","light","fontColor","bodybg","dark","Context","React","createContext","ThemeContext","toggleTheme","setState","theme","config","Provider","value","this","props","children","Component","Consumer","withThemeContext","WrappedComponent","ctx","className","styles","Layout","style","background","color","Spiner","type","height","width","themeSelector","switch","checked","onChange","target","slider","ContactForm","number","handleChange","handleSubmit","e","preventDefault","showNotification","setTimeout","hideNotification","onAddContact","Form","onSubmit","FormLabel","FormInput","FormButton","mapDispatchToProps","dispatch","option","method","body","JSON","stringify","fetch","then","response","json","data","catch","connect","useStyles","makeStyles","button","margin","spacing","transition","cursor","IconLabelButtons","removeContact","classes","Button","variant","size","startIcon","onClick","ownProps","contactsListItem","contactInfo","map","CSSTransition","key","timeout","classNames","contactList","filterForm","TransitionGroup","component","container","textAlign","image","paddingTop","ServerError","src","serverError","alt","Notification","notification","App","isExist","onGetContacts","isLoadingContact","errorServer","in","animationNotification","unmountOnExit","appear","animationTitle","title","animationFormContact","length","filterList","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.5d24c148.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"contactForm_Form__3Oz86\",\"FormLabel\":\"contactForm_FormLabel__3mtbH\",\"FormInput\":\"contactForm_FormInput__MSz1w\",\"FormButton\":\"contactForm_FormButton__1PzY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"contactList_enter__2ri0i\",\"enterActive\":\"contactList_enterActive__1O64-\",\"exit\":\"contactList_exit__-3GcH\",\"exitActive\":\"contactList_exitActive__3CXy2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterForm\":\"filter_filterForm__1oqI_\",\"FormLabel\":\"filter_FormLabel__3ml5u\",\"FormInput\":\"filter_FormInput__3X-NO\",\"contactsListItem\":\"filter_contactsListItem__35nKL\",\"deleteButton\":\"filter_deleteButton__u5Gpn\",\"enter\":\"filter_enter__1IxEE\",\"enterActive\":\"filter_enterActive__e-CuW\",\"exit\":\"filter_exit__k5iPR\",\"exitActive\":\"filter_exitActive__T5fbw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"notification_notification__1VmAh\",\"enter\":\"notification_enter__3BmGn\",\"enterActive\":\"notification_enterActive__3Z2jw\",\"exit\":\"notification_exit__1ytT9\",\"exitActive\":\"notification_exitActive__3SHFO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeSelector\":\"toggler_themeSelector__6Am-W\",\"switch\":\"toggler_switch__1Yj4p\",\"slider\":\"toggler_slider__NxCVr\",\"round\":\"toggler_round__3rzeJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsListItem\":\"contactList_contactsListItem__SJ3FG\",\"deleteButton\":\"contactList_deleteButton__3KpyN\",\"contactInfo\":\"contactList_contactInfo__3h559\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"base_title__17w8-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"animationTitle_appear__3mNO3\",\"appearActive\":\"animationTitle_appearActive__2abhL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"animationFormContact_appear__2e0fQ\",\"appearActive\":\"animationFormContact_appearActive__2ulZe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"layout_Layout__1UqyC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spiner\":\"loader_Spiner__2Y23D\"};","module.exports = __webpack_public_path__ + \"static/media/server-error.d01e640f.jpg\";","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContactRequest = createAction(\"contact/addRequest\");\r\nconst addContactSuccess = createAction(\"contact/addSuccess\");\r\nconst addContactError = createAction(\"contact/addError\");\r\n\r\nconst getContactRequest = createAction(\"contact/getRequest\");\r\nconst getContactSuccess = createAction(\"contact/getSuccess\");\r\nconst getContactError = createAction(\"contact/getError\");\r\n\r\nconst removeContactRequest = createAction(\"contact/removeRequest\");\r\nconst removeContactSuccess = createAction(\"contact/removeSuccess\");\r\nconst removeContactError = createAction(\"contact/removeError\");\r\n\r\nconst formFilter = createAction(\"contact/formFilter\");\r\n\r\nexport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  getContactRequest,\r\n  getContactSuccess,\r\n  getContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  formFilter\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  getContactRequest,\r\n  getContactSuccess,\r\n  getContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  formFilter\r\n} from \"./contactsActions\";\r\n\r\nconst onAddContact = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\n\r\nconst onRemoveContact = (state, action) =>\r\n  state.filter(({ id }) => id !== action.payload);\r\n\r\nconst items = createReducer([], {\r\n  [getContactSuccess]: (_, action) => action.payload,\r\n  [addContactSuccess]: onAddContact,\r\n  [removeContactSuccess]: onRemoveContact\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [formFilter]: (_, action) => action.payload\r\n});\r\n\r\nconst loader = createReducer(false, {\r\n  [getContactRequest]: () => true,\r\n  [getContactSuccess]: () => false,\r\n  [getContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [removeContactRequest]: () => true,\r\n  [removeContactSuccess]: () => false,\r\n  [removeContactError]: () => false\r\n});\r\n\r\nconst error = createReducer(false, {\r\n  [getContactRequest]: () => false,\r\n  [getContactSuccess]: () => false,\r\n  [getContactError]: () => true,\r\n  [addContactRequest]: () => false,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => true,\r\n  [removeContactRequest]: () => false,\r\n  [removeContactSuccess]: () => false,\r\n  [removeContactError]: () => true\r\n});\r\n\r\nexport default combineReducers({ items, filter, loader, error });\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: contactsReducer }\r\n});\r\n\r\nexport default store;\r\n","import {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  getContactRequest,\r\n  getContactSuccess,\r\n  getContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError\r\n} from \"./contactsActions\";\r\n\r\nconst baseUrl = \"https://goit-phonebook-api.herokuapp.com/contacts\";\r\nconst setHeaders = headers => {\r\n  return {\r\n    Authorization:\r\n      \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZTg1ZTg0ZjUwYWYwODAwMTc2OTAyMDYiLCJpYXQiOjE1ODU4MzQwNjN9.LPl_lfqqUkcIndFIwI1LyYUIrfprg9_rc4QpED_uivc\",\r\n    ...headers\r\n  };\r\n};\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  const contact = {\r\n    name,\r\n    number\r\n  };\r\n  const option = {\r\n    method: \"POST\",\r\n    headers: setHeaders({ \"Content-Type\": \"application/json\" }),\r\n    body: JSON.stringify(contact)\r\n  };\r\n\r\n  fetch(baseUrl, option)\r\n    .then(response => response.json())\r\n    .then(data => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst getContacts = () => dispatch => {\r\n  dispatch(getContactRequest());\r\n\r\n  const option = {\r\n    method: \"GET\",\r\n    headers: setHeaders()\r\n  };\r\n\r\n  fetch(baseUrl, option)\r\n    .then(response => response.json())\r\n    .then(data => dispatch(getContactSuccess(data)))\r\n    .catch(error => dispatch(getContactError(error)));\r\n};\r\n\r\nconst removeContact = id => dispatch => {\r\n  dispatch(removeContactRequest());\r\n\r\n  const option = {\r\n    method: \"DELETE\",\r\n    headers: setHeaders()\r\n  };\r\n\r\n  fetch(`${baseUrl}/${id}`, option)\r\n    .then(response => response.json())\r\n    .then(() => dispatch(removeContactSuccess(id)))\r\n    .catch(error => dispatch(removeContactError(error)));\r\n};\r\n\r\nexport { addContact, getContacts, removeContact };\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getLoadingContact = state => state.contacts.loader;\r\n\r\nconst getContact = state => state.contacts.items;\r\n\r\nconst getFilterContact = state => state.contacts.filter;\r\n\r\nconst getErrorServer = state => state.contacts.error;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContact, getFilterContact],\r\n  (items, filter) =>\r\n    items.filter(item => item.name.toLowerCase().includes(filter.toLowerCase()))\r\n);\r\n\r\nconst getContactsById = createSelector(\r\n  [(_, contactId) => contactId, getContact],\r\n  (contactId, contacts) => contacts.find(contact => contact.id === contactId)\r\n);\r\n\r\nexport {\r\n  getLoadingContact,\r\n  getContact,\r\n  getFilterContact,\r\n  getErrorServer,\r\n  getVisibleContacts,\r\n  getContactsById\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nconst themeConfig = {\r\n  light: {\r\n    fontColor: \"black\",\r\n    bodybg: \"#fff\"\r\n  },\r\n  dark: {\r\n    fontColor: \"white\",\r\n    bodybg: \"#333333\"\r\n  }\r\n};\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default class ThemeContext extends Component {\r\n  static Consumer = Context.Consumer;\r\n\r\n  toggleTheme = () => {\r\n    this.setState(state => ({\r\n      theme: state.theme === \"dark\" ? \"light\" : \"dark\"\r\n    }));\r\n  };\r\n\r\n  state = {\r\n    theme: \"light\",\r\n    toggleTheme: this.toggleTheme,\r\n    config: themeConfig\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ThemeContext from \"../context/ThemeContext\";\r\n\r\nconst withThemeContext = WrappedComponent => {\r\n  return function withThemeContext(props) {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {ctx => <WrappedComponent {...props} theme={ctx} />}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nwithThemeContext.propTypes = {\r\n  value: PropTypes.shape({\r\n    theme: PropTypes.string.isRequired,\r\n    toggleTheme: PropTypes.func.isRequired,\r\n    config: PropTypes.exact({\r\n      light: PropTypes.exact({\r\n        bodybg: PropTypes.string.isRequired,\r\n        fontColor: PropTypes.string.isRequired\r\n      }),\r\n      dark: PropTypes.exact({\r\n        bodybg: PropTypes.string.isRequired,\r\n        fontColor: PropTypes.string.isRequired\r\n      })\r\n    })\r\n  })\r\n};\r\n\r\nexport default withThemeContext;\r\n","import React from \"react\";\r\nimport withThemeContext from \"../../hoc/withThemeContext\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./layout.module.css\";\r\n\r\nconst Layout = ({ children, theme: { theme, config } }) => (\r\n  <div\r\n    className={styles.Layout}\r\n    style={{\r\n      background: config[theme].bodybg,\r\n      color: config[theme].fontColor\r\n    }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nLayout.propTypes = {\r\n  theme: PropTypes.shape({\r\n    theme: PropTypes.string.isRequired,\r\n    config: PropTypes.exact({\r\n      light: PropTypes.exact({\r\n        bodybg: PropTypes.string.isRequired,\r\n        fontColor: PropTypes.string.isRequired\r\n      }),\r\n      dark: PropTypes.exact({\r\n        bodybg: PropTypes.string.isRequired,\r\n        fontColor: PropTypes.string.isRequired\r\n      })\r\n    })\r\n  })\r\n};\r\n\r\nexport default withThemeContext(Layout);\r\n","import React from \"react\";\r\n\r\nimport styles from \"./loader.module.css\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst Spiner = () => (\r\n  <div className={styles.Spiner}>\r\n    <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n  </div>\r\n);\r\n\r\nexport default Spiner;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport withThemeContext from \"../../hoc/withThemeContext\";\r\n\r\nimport styles from \"./toggler.module.css\";\r\n\r\nconst Toggler = ({ theme: { theme, toggleTheme } }) => (\r\n  <div className={styles.themeSelector}>\r\n    <label className={styles.switch}>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={theme === \"dark\"}\r\n        onChange={({ target }) => toggleTheme(target.value)}\r\n      />\r\n      <span className={styles.slider}></span>\r\n    </label>\r\n  </div>\r\n);\r\n\r\nToggler.propTypes = {\r\n  theme: PropTypes.shape({\r\n    theme: PropTypes.string.isRequired,\r\n    toggleTheme: PropTypes.func.isRequired\r\n  })\r\n};\r\n\r\nexport default withThemeContext(Toggler);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { addContact } from \"../../redux/contacts/contactsOperations\";\r\nimport { getContact } from \"../../redux/contacts/contactsSelectors\";\r\n\r\nimport styles from \"./contactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const findContact = this.props.contacts.find(\r\n      contact => contact.name === name\r\n    );\r\n    if (findContact) {\r\n      this.props.showNotification();\r\n      setTimeout(() => this.props.hideNotification(), 2000);\r\n      return;\r\n    }\r\n    this.props.onAddContact(name, number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.Form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.FormLabel}>\r\n          Name\r\n          <input\r\n            className={styles.FormInput}\r\n            type=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            name=\"name\"\r\n          />\r\n        </label>\r\n        <label className={styles.FormLabel}>\r\n          Number\r\n          <input\r\n            className={styles.FormInput}\r\n            type=\"name\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            name=\"number\"\r\n          />\r\n        </label>\r\n        <button className={styles.FormButton} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getContact(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: addContact\r\n};\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  onAddContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    transition: \"background-color 200ms ease-in-out\",\r\n    cursor: \"pointer\"\r\n  }\r\n}));\r\n\r\nexport default function IconLabelButtons({ removeContact }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"secondary\"\r\n      className={classes.button}\r\n      size=\"small\"\r\n      startIcon={<DeleteIcon />}\r\n      onClick={removeContact}\r\n    >\r\n      Delete\r\n    </Button>\r\n  );\r\n}\r\n\r\nIconLabelButtons.propTypes = {\r\n    removeContact: PropTypes.func.isRequired\r\n  };\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeContact } from \"../../redux/contacts/contactsOperations\";\r\nimport { getContactsById } from \"../../redux/contacts/contactsSelectors\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./contactList.module.css\";\r\nimport IconLabelButtons from \"../Button/DeleteButton\";\r\n\r\nconst ContactListItem = ({ name, number, removeContact }) => (\r\n  <li className={styles.contactsListItem}>\r\n    <div className={styles.contactInfo}>{name}</div>\r\n    <div className={styles.contactInfo}>{number}</div>\r\n    <IconLabelButtons removeContact={() => removeContact()} />\r\n  </li>\r\n);\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const item = getContactsById(state, ownProps.id);\r\n\r\n  return {\r\n    ...item\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  removeContact: () => dispatch(removeContact(ownProps.id))\r\n});\r\n\r\nContactListItem.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  removeContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\n\r\nimport { getVisibleContacts } from \"../../redux/contacts/contactsSelectors\";\r\nimport contactList from \"./contactList.module.css\";\r\n\r\n\r\nconst ContactList = ({ contacts }) => (\r\n  <ul>\r\n    {contacts.map(({ id }) => (\r\n      <CSSTransition key={id} timeout={250} classNames={contactList}>\r\n        <ContactListItem id={id} />\r\n      </CSSTransition>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getVisibleContacts(state)\r\n});\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired\r\n    })\r\n  )\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport { formFilter } from \"../../redux/contacts/contactsActions\";\r\nimport {\r\n  getFilterContact,\r\n  getVisibleContacts\r\n} from \"../../redux/contacts/contactsSelectors\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\n\r\nimport styles from \"./filter.module.css\";\r\nimport contactList from \"../ContactList/contactList.module.css\";\r\n\r\nconst Filter = ({ value, onChange, contacts }) => (\r\n  <div className={styles.filterForm}>\r\n    <label className={styles.FormLabel}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.FormInput}\r\n        type=\"name\"\r\n        value={value}\r\n        onChange={e => onChange(e.target.value)}\r\n      />\r\n    </label>\r\n    <TransitionGroup component=\"ul\">\r\n      {contacts.map(({ id }) => (\r\n        <CSSTransition key={id} timeout={250} classNames={contactList}>\r\n          <ContactListItem id={id}/>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getVisibleContacts(state),\r\n  value: getFilterContact(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChange: formFilter\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired\r\n    })\r\n  )\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\n\r\nimport serverError from \"../../images/server-error.jpg\";\r\n\r\nconst styles = {\r\n  container: { textAlign: \"center\" },\r\n  image: { paddingTop: 100 }\r\n};\r\n\r\nconst ServerError = () => (\r\n  <div style={styles.container}>\r\n    <img src={serverError} alt=\"img\" width=\"500\" style={styles.image} />\r\n  </div>\r\n);\r\n\r\nexport default ServerError;\r\n","import React from \"react\";\r\nimport styles from \"./notification.module.css\";\r\n\r\nconst Notification = () => {\r\n  return (\r\n    <div className={styles.notification}>\r\n      <p>Contact already exist</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport { getContacts } from \"./redux/contacts/contactsOperations\";\r\nimport {\r\n  getLoadingContact,\r\n  getErrorServer,\r\n  getContact\r\n} from \"./redux/contacts/contactsSelectors\";\r\n\r\nimport styles from \"./base.module.css\";\r\nimport animationTitle from \"./css-animation-title/animationTitle.module.css\";\r\nimport animationFormContact from \"./Components/ContactForm/animationFormContact.module.css\";\r\nimport contactList from \"./Components/ContactList/contactList.module.css\";\r\nimport filterList from \"./Components/Filter/filter.module.css\";\r\nimport animationNotification from \"./Components/Notification/notification.module.css\";\r\n\r\nimport Layout from \"./Components/Layout/Layout\";\r\nimport Spiner from \"./Components/Loader/Loader\";\r\nimport Toggler from \"./Components/Toggler/Toggler\";\r\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\r\nimport ContactList from \"./Components/ContactList/ContactList\";\r\nimport Filter from \"./Components/Filter/Filter\";\r\nimport ThemeContext from \"./context/ThemeContext\";\r\nimport ServerError from \"./Components/ServerError/ServerError\";\r\nimport Notification from \"./Components/Notification/Notification\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    isExist: false\r\n  };\r\n  componentDidMount() {\r\n    this.props.onGetContacts();\r\n  }\r\n\r\n  showNotification = () => {\r\n    this.setState({ isExist: true });\r\n  };\r\n\r\n  hideNotification = () => {\r\n    this.setState({ isExist: false });\r\n  };\r\n\r\n  render() {\r\n    const { isLoadingContact, errorServer, contacts } = this.props;\r\n    return (\r\n      <ThemeContext>\r\n        {errorServer && <ServerError />}\r\n        {!errorServer && (\r\n          <Layout>\r\n            <CSSTransition\r\n              in={this.state.isExist}\r\n              timeout={300}\r\n              classNames={animationNotification}\r\n              unmountOnExit\r\n            >\r\n              <Notification />\r\n            </CSSTransition>\r\n            <Toggler />\r\n            <CSSTransition\r\n              in={true}\r\n              appear={true}\r\n              timeout={500}\r\n              classNames={animationTitle}\r\n              unmountOnExit\r\n            >\r\n              <h1 className={styles.title}>Phonebook</h1>\r\n            </CSSTransition>\r\n            <CSSTransition\r\n              in={true}\r\n              appear={true}\r\n              timeout={500}\r\n              classNames={animationFormContact}\r\n              unmountOnExit\r\n            >\r\n              <ContactForm\r\n                showNotification={this.showNotification}\r\n                hideNotification={this.hideNotification}\r\n              />\r\n            </CSSTransition>\r\n            <CSSTransition\r\n              in={true}\r\n              appear={true}\r\n              timeout={500}\r\n              classNames={animationTitle}\r\n              unmountOnExit\r\n            >\r\n              <h2 className={styles.title}>Contacts</h2>\r\n            </CSSTransition>\r\n            <CSSTransition\r\n              in={contacts.length > 1}\r\n              timeout={500}\r\n              classNames={filterList}\r\n              unmountOnExit\r\n            >\r\n              <Filter />\r\n            </CSSTransition>\r\n\r\n            <CSSTransition\r\n              in={contacts.length === 1}\r\n              timeout={250}\r\n              classNames={contactList}\r\n              unmountOnExit\r\n            >\r\n              <ContactList />\r\n            </CSSTransition>\r\n\r\n            {isLoadingContact && <Spiner />}\r\n          </Layout>\r\n        )}\r\n      </ThemeContext>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoadingContact: getLoadingContact(state),\r\n  errorServer: getErrorServer(state),\r\n  contacts: getContact(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onGetContacts: getContacts\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}